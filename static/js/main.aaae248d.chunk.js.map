{"version":3,"sources":["components/Tabs/Tab.js","components/Tabs/TabsPanel.js","App.js","reportWebVitals.js","index.js"],"names":["Tab","props","text","isActive","setActiveTab","className","onClick","event","target","scrollIntoView","TabsPanel","useState","activeTab","showLeftShadow","setShowLeftShadow","showRightShadow","setShowRightShadow","onScroll","e","scrolledFromLeft","scrollLeft","scrollFullSize","scrollWidth","clientWidth","map","name","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAwBeA,EAtBH,SAAAC,GACV,IACEC,EAGED,EAHFC,KACAC,EAEEF,EAFFE,SACAC,EACEH,EADFG,aAQF,OACE,oBACEC,UAAS,mBAAcF,GAAY,aAA1B,YAAmD,qBAATD,GAA+B,gBAClFI,QARa,SAAAC,GACfA,EAAMC,OAAOC,iBACbL,EAAaF,IAIb,SAIGA,KC6BQQ,EA3CG,WAChB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBR,EAAlB,KACA,EAA4CO,oBAAS,GAArD,mBAAOE,EAAP,KAAuBC,EAAvB,KACA,EAA8CH,oBAAS,GAAvD,mBAAOI,EAAP,KAAwBC,EAAxB,KAsBA,OACE,oBACEC,SAVoB,SAAAC,GACtB,IAAIC,EAAmBD,EAAEV,OAAOY,WAC5BC,EAAiBH,EAAEV,OAAOc,YAAcJ,EAAEV,OAAOe,YAAc,EAE1CT,EAAJ,IAArBK,GACqCH,IAArCG,GAAoBE,KAMlBhB,UAAW,OAhBP,GAAN,OAAUQ,GAAkBE,GAAmB,wBAA/C,sBACMF,GAAkB,cADxB,sBAEME,GAAmB,gBAYzB,SArBe,CACf,YAAa,cAAe,mBAAoB,uBAChD,mBAAoB,mBAAoB,qBACxC,aAAc,eAAgB,oBAAqB,yBAuBtCS,KAAI,SAACC,GAAD,OACX,cAAC,EAAD,CAEEvB,KAAMuB,EACNtB,SAAUS,IAAca,EACxBrB,aAAcA,GAHTqB,SChCFC,EAJH,WACV,OAAO,cAAC,EAAD,KCSMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,K","file":"static/js/main.aaae248d.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Tab = props => {\n  const {\n    text,\n    isActive,\n    setActiveTab\n  } = props;\n\n  const clickTab = event => {\n    event.target.scrollIntoView();\n    setActiveTab(text);\n  }\n\n  return (\n    <li\n      className={`nav-item ${isActive && \"active-tab\"} ${text === \"Domain Expertise\" && \"disabled-tab\"}`}\n      onClick={clickTab}\n    >\n      {text}\n    </li>\n  );\n};\n\nexport default Tab;\n","import React, { useState } from 'react';\n\nimport \"./style.css\";\nimport Tab from \"./Tab\";\n\nconst TabsPanel = () => {\n  const [activeTab, setActiveTab] = useState(\"\");\n  const [showLeftShadow, setShowLeftShadow] = useState(false);\n  const [showRightShadow, setShowRightShadow] = useState(true);\n\n  const tabNames = [\n    \"Job Focus\", \"Soft Skills\", \"Technical Skills\", \"Functional Expertise\",\n    \"Domain Expertise\", \"Patent Expertise\", \"Personal Expertise\",\n    \"Job Focus2\", \"Soft Skills2\", \"Technical Skills2\", \"Functional Expertise2\"\n  ];\n\n  const getShadowPosition = () => {\n    return `${showLeftShadow && showRightShadow && \"left-and-right-shadow\"} \n        ${showLeftShadow && \"left-shadow\"} \n        ${showRightShadow && \"right-shadow\"}`;\n  };\n\n  const scrollTabsPanel = e => {\n    let scrolledFromLeft = e.target.scrollLeft;\n    let scrollFullSize = e.target.scrollWidth - e.target.clientWidth - 1;\n\n    scrolledFromLeft !== 0 ? setShowLeftShadow(true) : setShowLeftShadow(false);\n    scrolledFromLeft >= scrollFullSize ? setShowRightShadow(false) : setShowRightShadow(true);\n  };\n\n  return (\n    <ul\n      onScroll={scrollTabsPanel}\n      className={\"nav \" + getShadowPosition()}\n    >\n      {\n        tabNames.map((name) =>\n          <Tab\n            key={name}\n            text={name}\n            isActive={activeTab === name}\n            setActiveTab={setActiveTab}\n          />)\n      }\n    </ul>\n  );\n};\n\nexport default TabsPanel;\n","import TabsPanel from \"./components/Tabs\";\n\nconst App = () => {\n  return <TabsPanel/>\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}